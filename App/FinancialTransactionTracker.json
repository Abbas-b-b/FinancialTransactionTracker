{
  "files": [
    {
      "id": "4dcfb113-76e1-41fb-bb2e-279aa850bf81",
      "name": "Main",
      "type": "server_js",
      "source": "/*\n* Response to get request and retun Home.html\n*/\nfunction doGet(){\n  var template = HtmlService.createTemplateFromFile('Index');\n\n  var htmlOutput = template.evaluate()\n    .setSandboxMode(HtmlService.SandboxMode.NATIVE)\n    .addMetaTag('viewport', 'width=device-width, initial-scale=1')\n    .setTitle(GetSetting(\"AppTitle\"));\n\n  return htmlOutput;\n}\n\n/*\n* Add a tag to sheet\n*/\nfunction AddTag(Tag){\n  if(Tag.Tag == null || Tag.Tag == \"\"){\n    return \"Invaild Tag\";\n  }\n\n  var Sheet = GetTagsSheet();\n  var RowIndex = GetLastRow(Sheet, GetSetting(\"TagNameColumnName\")) + 1; //Added to go to the new empty row\n  var TagNameColumnName = GetSetting(\"TagNameColumnName\");\n  var TagIdColumnName = GetSetting(\"TagIdColumnName\");\n  var TagAmountColumnName = GetSetting(\"TagAmountColumnName\");\n\n  //Generate tag id and check if there is a same id or not if the same id exist try to create new id\n  var Tags = GetTags();\n  var TagId  \n  do{\n    TagId = GenerateUUIDv4();\n\n    var TagExist = false;\n    \n    for (i = 0; i < Tags.length; i++) {\n      if(Tags[i][1] == TagId){\n        TagExist = true;\n      }\n    } \n  }\n  while(TagExist)\n  \n  Sheet.getRange(TagNameColumnName + RowIndex).setValue(Tag.Tag);\n  Sheet.getRange(TagIdColumnName + RowIndex).setValue(TagId);\n  Sheet.getRange(TagAmountColumnName + RowIndex).setValue(GenerateTagAmountFormula(RowIndex));\n  \n  return \"Done\";\n}\n\n/*\n* Handle a transaction info that comes from UI\n*/\nfunction HandleTransaction(TransactionDetail){\n  if(TransactionDetail.Date === null || TransactionDetail.Date == \"\"){\n    return \"Invalid Date\";\n  }\n  else if(TransactionDetail.Amount === null || TransactionDetail.Amount == \"\"){\n    return \"Invalid Amount\";\n  }\n  \n  var Sheet = GetTransactionsSheet()\n  var RowIndex = GetLastRow(Sheet, GetSetting(\"TransactionDateColumnName\")) + 1; //Added to go to the new empty row\n \n  var TransactionDateColumnName = GetSetting(\"TransactionDateColumnName\");\n  var TransactionAmountColumnName = GetSetting(\"TransactionAmountColumnName\");\n  var TransactionTagsNameColumnName = GetSetting(\"TransactionTagsNameColumnName\");\n  var TransactionDescriptionColumnName = GetSetting(\"TransactionDescriptionColumnName\");\n  var TransactionTagIdColumnName = GetSetting(\"TransactionTagIdColumnName\");\n  \n  Sheet.getRange(TransactionDateColumnName + RowIndex).setValue(TransactionDetail.Date);\n  Sheet.getRange(TransactionAmountColumnName + RowIndex).setValue(TransactionDetail.Amount);\n  Sheet.getRange(TransactionTagsNameColumnName + RowIndex).setValue(TransactionDetail.TagsName);\n  Sheet.getRange(TransactionDescriptionColumnName + RowIndex).setValue(TransactionDetail.Description);\n  Sheet.getRange(TransactionTagIdColumnName + RowIndex).setValue(TransactionDetail.TagsId);\n  \n  return \"Done\";\n}"
    },
    {
      "id": "615fbe40-fa62-4b18-86df-c40824f6e8f5",
      "name": "Index",
      "type": "html",
      "source": "<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>Financial Transaction Tracker</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js\"></script>\n    <script src=\"https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js\"></script>\n    <link href=\"https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css\" rel=\"stylesheet\" />\n\n    <style>\n        html,\n        body {\n            font-family: Arial, Helvetica, sans-serif;\n            background-color: #dbdbdb;\n        }\n\n        .CenteredContent {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        .Body {\n            width: 95vw;\n            height: 95vh;\n            overflow: auto;\n        }\n\n        .Form {\n            border: 3px solid #a5a4a4;\n            border-radius: 5px;\n            padding: 10px;\n            background-color: #dbdbdb;\n            min-width: 30vw;\n            max-height: 95vh;\n        }\n\n        .Form input[type=text],\n        .Form input[type=date],\n        .Form select,\n        .Form input[type=password] {\n            width: 100%;\n            padding: 12px 20px;\n            margin: 8px 0;\n            display: inline-block;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            box-sizing: border-box;\n            text-align: center;\n            background-color: white;\n        }\n\n        .Form input[type=submit] {\n            width: 100%;\n            background-color: #4CAF50;\n            color: white;\n            padding: 14px 20px;\n            margin: 8px 0;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n\n        .Button {\n            background-color: rgba(28, 85, 241, 0.863);\n            color: white;\n            padding: 10px;\n            margin: 8px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n\n        div.OpacityProvider {\n            display: none;\n            top: 0;\n            left: 0;\n            min-width: 100%;\n            min-height: 100%;\n            /*these make the opacity provider fill the screen*/\n            opacity: 0.9;\n            filter: alpha(opacity=50);\n            position: absolute;\n            background: black;\n            z-index: 100;\n        }\n\n        div.PopupData {\n            width: 50vw;\n            height: 30vh;\n            display: none;\n            background: #dbdbdb;\n            border: 1px solid #dbdbdb;\n            border-radius: 4px;\n            z-index: 101;\n            /*must be greater than the opacity provider*/\n            position: fixed;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"CenteredContent\">\n        <div class=\"Body CenteredContent\">\n            <form class=\"Form\" method=\"POST\" onsubmit=\"TransactionSubmission(this)\">\n                <label for=\"Amount\">Amount</label>\n                <input type=\"text\" name=\"Amount\" id=\"Amount\" autocomplete=\"off\">\n\n                <hr>\n\n                <label for=\"Date\">Date</label>\n                <input type=\"date\" name=\"Date\" id=\"Date\">\n\n                <hr>\n\n                <div style=\"margin: 20px 0px;\">\n                    <label for=\"Tag\">Tag</label>\n                    <select name=\"Tag\" multiple data-placeholder=\"Begin typing a tag to filter...\" id=\"TagsSelect\"\n                        class=\"chosen-select\">\n                        <?!= BuildTagsOptions(GetTags()) ?>\n                    </select>\n                    <button class=\"Button\" id=\"Show\">Add</button>\n                </div>\n\n                <hr>\n\n                <label for=\"Description\">Description</label>\n                <input type=\"text\" name=\"Description\" autocomplete=\"off\">\n\n                <hr>\n\n                <input type=\"submit\" value=\"Submit\">\n            </form>\n\n            <div class=\"Popup PopupData\">\n                <button id=\"Close\" class=\"Button\" style=\"float: right;\">Close</button>\n                <form class=\"Form\" onsubmit=\"AddTag(this)\" style=\"border: none;\">\n                    <label>Tag Name</label>\n                    <input type=\"text\" name=\"Tag\" autocomplete=\"off\">\n                    <hr>\n                    <input type=\"submit\" value=\"Add\" style=\"background-color: darkslateblue;\">\n                </form>\n            </div>\n\n            <div class=\"Popup OpacityProvider\"></div>\n        </div>\n    </div>\n\n    <script>\n        function AddTag(Form) {\n            google.script.run.withSuccessHandler(HandleFormSubmission).AddTag(Form);\n        }\n        \n        function TransactionSubmission(Form) {\n            var Result = {};\n            Result.Amount = Form.Amount.value;\n            Result.Date = Form.Date.value;\n            Result.Description = Form.Description.value;\n            Result.TagsName = \"\";\n            Result.TagsId = \"\";\n\n  \t        var SelectedOptions = $(\"#TagsSelect option:selected\");\n            $.each(SelectedOptions ,function(Key,Val){ \n                Result.TagsName += Val.text + \",\";\n                Result.TagsId += Val.value + \",\";\n            });\n\n  \t        Result.TagsName = Result.TagsName.trim().substring(0, Result.TagsName.length - 1);\n            Result.TagsId = Result.TagsId.trim().substring(0, Result.TagsId.length - 1);\n                       \n            google.script.run.withSuccessHandler(HandleFormSubmission).HandleTransaction(Result);\n        }\n\n        function HandleFormSubmission(Message) {\n            alert(Message);\n        }\n\n        $(document).ready(function () {\n            //Handle popup funciton\n            $(\"#Show\").click(function () {\n                $(\"div.Popup\").show();\n                return false;\n            });\n            $(\"#Close\").click(function () {\n                $(\"div.Popup\").hide();\n                return false;\n            });\n\n\n            // Prevent forms from submitting.\n            var forms = document.querySelectorAll('form');\n            for (var i = 0; i < forms.length; i++) {\n                forms[i].addEventListener('submit', function (event) {\n                    event.preventDefault();\n                });\n            }\n\n            //Set tag input\n            $(\".chosen-select\").chosen({\n                no_results_text: \"Oops, nothing found!\"\n            });\n\n            //Set date input to today\n            var now = new Date();\n            var day = (\"0\" + now.getDate()).slice(-2);\n            var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n            var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n            $(\"#Date\").val(today);\n\n            //Handle Amout input number comma seperate feature\n            var textbox = $(\"#Amount\");\n            var hidden = \"#ThousandSeperator_num\";\n            $(textbox).keyup(function () {\n                var num = $(textbox).val();\n                var comma = /,/g;\n                num = num.replace(comma, \"\");\n                $(hidden).val(num);\n                var numCommas = addCommas(num);\n                $(textbox).val(numCommas);\n            });\n        });\n        function addCommas(nStr) {\n            nStr += \"\";\n            var comma = /,/g;\n            nStr = nStr.replace(comma, \"\");\n            x = nStr.split(\".\");\n            x1 = x[0];\n            x2 = x.length > 1 ? \".\" + x[1] : \"\";\n            var rgx = /(\\d+)(\\d{3})/;\n            while (rgx.test(x1)) {\n                x1 = x1.replace(rgx, \"$1\" + \",\" + \"$2\");\n            }\n            return x1 + x2;\n        }\n\n        //Make Amout input to just accept numbers\n        // Restrict input to digits and \".\" by using a regular expression filter.\n        setInputFilter(document.getElementById(\"Amount\"), function (value) {\n            return /^[-]?(\\d*[,]*\\d*)*$/.test(value);\n        });\n        // Restricts input for the given textbox to the given inputFilter.\n        function setInputFilter(textbox, inputFilter) {\n            [\"input\", \"keydown\", \"keyup\", \"mousedown\", \"mouseup\", \"select\", \"contextmenu\", \"drop\"].forEach(function (event) {\n                textbox.addEventListener(event, function () {\n                    if (inputFilter(this.value)) {\n                        this.oldValue = this.value;\n                        this.oldSelectionStart = this.selectionStart;\n                        this.oldSelectionEnd = this.selectionEnd;\n                    } else if (this.hasOwnProperty(\"oldValue\")) {\n                        this.value = this.oldValue;\n                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\n                    }\n                });\n            });\n        }\n    </script>\n</body>\n</html>"
    },
    {
      "id": "3a45f46a-9d2e-4e4d-93ac-6490e0a0e0c8",
      "name": "SheetHelper",
      "type": "server_js",
      "source": "/*\n* Return SpreadSheet which contains data\n*/\nfunction GetSpreadSheet(){\n    var SpreadSheetId = GetSetting(\"SpreadSheetId\");\n    return SpreadsheetApp.openById(SpreadSheetId);\n}\n\n/*\n* Return Sheet which contains transactions\n*/\nfunction GetTransactionsSheet(){\n  return GetSpreadSheet().getSheets()[GetSetting(\"TransactionsSheetIndex\")];\n}\n\n/*\n* Return Sheet which contains tags\n*/\nfunction GetTagsSheet(){\n  return GetSpreadSheet().getSheets()[GetSetting(\"TagsSheetIndex\")];\n}\n\n/*\n* Get the last row number with data in the give Coulmn and Sheet\n*/\nfunction GetLastRow(Sheet, Column) {\n    var Range = Column + \"1\" + \":\" + Column;\n    return Sheet.getRange(Range).getValues().filter(String).length;\n}\n\n/*\n* Return tags with name and id\n*/\nfunction GetTagsRange(){\n    var TagNameColumnName = GetSetting(\"TagNameColumnName\")\n    var TagsColumnStartRow = GetSetting(\"TagsColumnStartRow\");\n    var TagsIdColumnName = GetSetting(\"TagIdColumnName\");\n    var LastTagsRowIndex = GetLastRow(GetTagsSheet(), TagNameColumnName);\n\n    return TagNameColumnName + TagsColumnStartRow  + \":\" + TagsIdColumnName + LastTagsRowIndex;\n}\n\n/*\n* Return all tags information\n*/\nfunction GetTags(){\n    var TagsRange = GetTagsRange();\n    return GetTagsSheet().getRange(TagsRange).getValues().filter(String);\n}\n\n/*\n* Generate sumif formula to sum up a tag amount\n*/\nfunction GenerateTagAmountFormula(RowIndex){\n    var Result =\n        \"=SUMIF(\" + \n        GetSetting(\"TransactionsSheetName\") +\n        \"!\" + \n        GetSetting(\"TransactionTagIdColumnName\") + \":\" + GetSetting(\"TransactionTagIdColumnName\") +\n        \", \\\"*\\\" & \" + \n        GetSetting(\"TagIdColumnName\") + \n        RowIndex + \n        \" & \\\"*\\\", \"+\n        GetSetting(\"TransactionsSheetName\") +\n        \"!\" + \n        GetSetting(\"TransactionAmountColumnName\") + \":\" + GetSetting(\"TransactionAmountColumnName\") +\n        \")\";\n        \n    return Result;\n}"
    },
    {
      "id": "14acf6eb-8809-4e85-8c15-07469d8237c8",
      "name": "Settings",
      "type": "server_js",
      "source": "/*\n* To keep settings of application\n*/\nfunction GetSettings(){\n    return {\n        \"AppTitle\" : \"Financial Transaction Tracker\",\n    \n        \"SpreadSheetId\" : \"\",\n\n        //Tags sheet\n        \"TagsSheetIndex\" : 0,\n        \"TagNameColumnName\" : \"A\",\n        \"TagIdColumnName\" : \"B\",\n        \"TagAmountColumnName\" : \"C\",\n        \"TagsColumnStartRow\" : 2,\n\n        //Transaction sheet\n        \"TransactionsSheetName\" : \"Transactions\",\n        \"TransactionsSheetIndex\" : 1,\n        \"TransactionDateColumnName\" : \"A\",\n        \"TransactionAmountColumnName\" : \"B\",\n        \"TransactionTagsNameColumnName\" : \"C\",\n        \"TransactionDescriptionColumnName\" : \"D\",\n        \"TransactionTagIdColumnName\" : \"E\",\n        \"TransactionsColumnStartRow\" : 2,\n    }\n}\n\n/*\n* Get a specific setting value with it's key\n*/\nfunction GetSetting(Key){\n    return GetSettings()[Key]\n}"
    },
    {
      "id": "301a7d86-3de7-4f48-9390-e59d9ee739d0",
      "name": "ViewHelper",
      "type": "server_js",
      "source": "/*\n* Add option tag arround tag name to use in html document\n*/\nfunction BuildTagsOptions(Tags){\n  var Result = \"\";\n  \n  for(TagIndex in Tags){\n    Result += \"<option value=\\\"\" + Tags[TagIndex][1] + \"\\\">\" + Tags[TagIndex][0] + \"</option>\"\n  }\n  \n  return Result;\n}"
    },
    {
      "id": "1fb1e16a-17ba-4c9f-b89e-6aed1bd63113",
      "name": "Utility",
      "type": "server_js",
      "source": "/*\n* Generate UUID from https://stackoverflow.com/a/2117523\n*/\nfunction GenerateUUIDv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}"
    }
  ]
}